events {
    worker_connections 1024;  # Adjust this number based on your server capabilities
}

http {
    upstream backend_servers {
        server server1-pezc.onrender.com:443;  # HTTPS Server 1
        server server2-td4j.onrender.com:443;  # HTTPS Server 2
        server server3-689g.onrender.com:443;  # HTTPS Server 3
    }

    server {
        listen 80;  # Listening on port 80 for HTTP traffic
        server_name yourdomain.com;  # Replace with your actual domain or IP address

        location / {
            proxy_pass https://backend_servers;  # Use HTTPS for upstream
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Capture the backend server to a variable
            proxy_set_header X-Backend-Server $upstream_addr;  # Include the backend server address

            # SSL settings
            proxy_ssl_server_name on;  # Enable this to pass the SNI (Server Name Indication)
            proxy_ssl_protocols TLSv1.2 TLSv1.3;  # Set the desired SSL protocols
            proxy_ssl_verify off;  # Turn off SSL certificate verification (optional, only if self-signed)

            proxy_connect_timeout 60;
            proxy_send_timeout 60;
            proxy_read_timeout 60;
            send_timeout 60;
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;  # Ensure this path exists with the error page
        }
    }
}
